ソフトウェアを扱う際、ほとんどのプログラムはデータの永久保存が必要となる。
通常、コンピュータの CPU はメモリを介して直接動作しますが、メモリはハードウェア的な理由から揮発性（volatile）を持る。
つまり、メモリ内のデータを保持するために電力を必要とし、メモリの電源を切ると、メモリ内のデータはすぐに失われてしまう。
そのため、恒久的に保存されているデータを取り出したり、保存したりする方法が必要になる際、データベースシステムを活用する方法がある。

データベースは非常に複雑で、膨大な量の作業負荷を処理している。低・中規模のソフトウェアでは、数十テラバイトのメモリを使用し、1 秒間に何万回もデータにアクセスして更新する。
ソフトウェアエンジニアは、臨機応変に対応できる汎用性の高いストレージシステムを必要とする複雑な構造を扱い、データサイエンティストはソフトウェアが収集したさまざまなデータセットにアクセスして分析を行う。

一方、大規模なソフトウェアでは数百万人のユーザーを扱うことが多いため、データの保存と取得に対して拡張性を持つ方法が必要となる。
その結果、保存されるデータの量と 1 秒間にアクセスされるデータの量は驚異的なものとなり、通常のソフトウェアとは異なる問題や課題が発生する。

機能、物理的特性、論理、プロトコルを 1 つのソフトウェアツールに抽象化し、データの保存や読み書きを可能にするシステムのことをデータベース管理システム（DBMS : Database Management System）と呼ぶ。
データベース管理システムは、組織化されたデータの集合体を持ち、データへのアクセス、操作、管理を行うプログラムの集合を提供する。


データベースの特性

オペレーティングシステムには、データをファイルとしてストレージに保存する方法が備わっており、プログラミング言語には、ファイルを読み書きするためのライブラリが用意されている。
このファイル処理システムによって、あらゆる種類のデータをローカルストレージに保存し、後から読み出すことができる。
また、データ構造をファイルに格納できるように文字列やビット等の形式に変換するシリアル化（serialize）や、
ファイルを読み込んでメモリ内のオブジェクトに戻す逆シリアル化（deserialize）を行うこともある。

JavaScript のようなオブジェクトを文字列として格納する JSON 形式のように、特定の規格やライブラリも存在する。
この JSON は複数の言語でサポートされており、オブジェクトを JSON ファイルにエンコードしたり、JSON ファイルをオブジェクトにデコードしたりすることができる。