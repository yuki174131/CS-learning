CPU が直接アクセスできる汎用記憶装置はレジスタとメインメモリの 2 つだけ。

レジスタは CPU 内部に存在し、数バイト程度の非常に高速な小容量のメモリで、一時的なデータ保持に使用される。一方、メインメモリは一般的な PC で数十ギガバイト程度の容量を持ち、現在実行中のプログラムやデータを保存するために使用される。
メインメモリの容量は限られており、複数のプロセスをすべてメインメモリに移して実行することは現実的ではないため、OS によるメモリ管理が重要です。必要に応じてプロセスの一部をメインメモリに移したり、ストレージに一時的に保存したりする。

そのため、各プロセスが他のプロセスから干渉されないように独立したメモリ空間を提供し、プロセスを保護しながら頻繁にメモリ資源を効率的に管理するため、
メモリの管理が非常に煩雑になる。また、メモリのフラグメンテーションなどの問題を最小限に抑えることで、効率的なメモリの使用が可能となる。

物理アドレス
物理アドレス空間は、コンピュータのメインメモリ内の物理的な配置を指し、それぞれのメモリセルを一意に識別するために使用される。
メインメモリは1バイトごとに分割され、各バイトには物理アドレス（physical address）という一意の番号が割り当てられる。

CPU がプロセスを実行する際、特定のメモリアドレスを指定する。これは、プログラムがデータにアクセスしたり操作したりするために、メモリ内の正確な位置を識別する必要があるためである。
例えば、プログラムが変数の値を読み取りたい場合、その変数が保存されている特定の物理アドレスを CPU が指定してアクセスする。

メモリの割り当て
プロセスがメインメモリを使用するためには、空いているメモリに対して予約する必要があり、それを割り当て（allocation）と呼ぶ。
今回の方法は、メインメモリ内に可変のパーティションを作成し、各プロセスに割り当てる。この場合、OS はどのメモリアドレスに空きが存在するのかを、連結リスト構造で追跡して管理する。

空きメモリの割り当て方針には多くのアルゴリズムが存在するが、以下の 3 つが代表的。それぞれのアルゴリズムは、空きメモリリストからサイズ n 以上のメモリを選ぶために使用される。

First Fit
リスト構造を順に辿り、最初にサイズ n 以上の空きメモリが見つかったホールからメモリを割り当てる。

Worst Fit
最も大きいホールを割り当てる。リスト構造がサイズ順に並んでいない限り、全探索が必要になる可能性がある。

Best Fit
サイズ n 以上でホールの中から最も小さい領域のホールを割り当てる。こちらも、リストがサイズ順に並んでいない限り、全探索が必要になる可能性がある。

これらの単純な割り当て方法には、どれを使用しても問題がある。
連続したメモリ空間の割り当てと解放を繰り返す過程で、小さな領域が多数作られ、これがメモリフラグメンテーション（memory fragmentation）問題の原因となる。
この問題は、メモリの効率的な使用を妨げ、システムのパフォーマンスに影響を及ぼす可能性がある重要な課題。


スワッピング
プロセスとその対象データを処理するためには、メインメモリ内にデータが存在しなければならない。実メモリ容量以上の処理を行うことも考えられる。
そこで、スワッピング（swapping）という技術が使われる。
スワッピングとは、プロセスを一時的にメインメモリから、補助記憶装置に相互に移動させることで、メモリの空きを確保する。
スワッピング領域へ移動することをスワップアウト（swap-out）、スワッピング領域からメインメモリへ戻すことをスワップイン（swap-in）と呼ぶ。

このスワッピングの利点は、メインメモリの物理的な容量を超えたプロセスの実行が可能になること。しかし、デメリットとして、メモリからストレージへの移動には相対的に時間がかかるため、処理速度が遅くなる可能性がある。
また、スワップアウトによって生じる空き領域の非効率的な配置が、メモリフラグメンテーションという問題を引き起こすこともあるため、これに対処する必要がある場合もある。


メモリの合計空き容量は充分であるにもかかわらず、新しい割り当てができない状態が発生することがある。
この現象は割り当てられたブロック内のフラグメンテーションとは異なり、外部フラグメンテーションとも称されることがある。
https://gyazo.com/64d5bd89daf061cbf8e1eeeff6328479

メモリ利用の効率を厳密に分析するのは一般に難しいが、メモリ割り当てアルゴリズムの一つである First Fit の統計的分析を行うと、最適化がどれほど進んでいても、最終的に N 個の割り当てメモリのうち、0.5N 個のブロックがフラグメンテーションで消失していることがわかっている。
この現象は、通称 50％ ルールとして知られている。

外部フラグメンテーションに対する解決策の 1 つとしてメモリコンパクション（memory compaction）がある。メモリコンパクションは、点在した空きブロックをかき集めて 1 つの大きな空き領域を作る手法。
https://gyazo.com/ed4f828ffba68e977d7cfcbbc631d999

